<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Nessan Holding Group</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container">
        <h1>Nessan Holding Group</h1>
        <!-- Форма входа -->
        <div id="loginForm" class="login-form">
            <h2>Login</h2>
            <form id="authForm">
                <input type="text" id="username" placeholder="Username" required>
                <input type="password" id="password" placeholder="Password" required>
                <button type="submit">Login</button>
            </form>
        </div>

        <!-- Содержимое после входа (скрыто до авторизации) -->
        <div id="mainContent" style="display: none;">
            <div class="head_button">
                <button id="addCarButton" onclick="document.getElementById('addCarForm').style.display='block';">Add a Car</button>
                <button id="logoutButton" class="logout_button" onclick="logout()">Logout</button>
            </div>
            <div id="addCarForm" style="display: none;">
                <h2>Add a Car</h2>
                <form id="addCarFormSubmit">
                    <input type="text" id="carMake" placeholder="Make" required>
                    <input type="text" id="carColor" placeholder="Color" required>
                    <input type="number" id="carYear" placeholder="Year" required>
                    <input type="text" id="carLicensePlate" placeholder="License Plate" required>
                    <button type="submit">Add Car</button>
                </form>
            </div>

            <h2>Cars List</h2>
            <div id="carsList" class="cars-list"></div>
        </div>
    </div>
    <script>
        const API_URL = 'http://localhost:8001/api/cars';
        let currentUserId = null;
        // Функция логина
        document.getElementById('authForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;

            try {
                const response = await fetch('http://localhost:8000/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ username, password })
                });

                const result = await response.json();
                if (response.ok) {
                    currentUserId = result.user_id;
                    sessionStorage.setItem('userId', currentUserId); // Сохраняем userId в sessionStorage

                    document.getElementById('loginForm').style.display = 'none';
                    document.getElementById('mainContent').style.display = 'block';
                    await loadCars();
                } else {
                    alert(result.message || 'Invalid credentials!');
                }
            } catch (error) {
                console.error('Login error:', error);
                alert('An error occurred during login');
            }
        });
        
                // Функция для загрузки списка машин
        async function loadCars() {
            try {
                const token = sessionStorage.getItem('userId');
                const response = await fetch(API_URL, {
                    headers: { 'Authorization': `Bearer ${token}` }
                });
                const cars = await response.json();
                const carsList = document.getElementById('carsList');
                carsList.innerHTML = '';

                if (!cars.length) {
                    carsList.innerHTML = '<p>No cars available.</p>';
                    return;
                }

                cars.forEach(car => {
                    const carElement = document.createElement('div');
                    carElement.className = 'car-card';
                    carElement.id = `car-${car.id}`; // Уникальный ID для обновлений
                    carElement.innerHTML = `
                        <div class="car-card-inner">
                            <h3>${car.make} (${car.year})</h3>
                            <p>Color: ${car.color}</p>
                            <p>License Plate: ${car.license_plate}</p>
                            <p>Kilomets: <span id="kilomets-${car.id}">${car.mileage}</span></p>
                            <button onclick="deleteCar(${car.id})">Delete</button>
                        </div>
                    `;
                    carsList.appendChild(carElement);
                });
            } catch (error) {
                console.error('Error loading cars:', error);
            }
        }

        // Функция для периодического обновления километража автомобилей
        // Периодическое обновление километража
        function startRealTimeMileageUpdate() {
            setInterval(async () => {
                try {
                    // Отправляем запрос к серверу
                    const response = await fetch('http://localhost:8001/api/cars', {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    });

                    // Обрабатываем ответ
                    if (response.ok) {
                        const cars = await response.json();
                        cars.forEach(car => {
                            const mileageElement = document.getElementById(`kilomets-${car.id}`);
                            if (mileageElement) {
                                mileageElement.textContent = car.mileage; // Обновляем километраж
                            }
                        });
                    } else {
                        console.error('Failed to fetch mileage updates:', response.statusText);
                    }
                } catch (error) {
                    console.error('Error during mileage update:', error);
                }
            }, 2000); // Интервал обновления: каждые 2 секунды
        }

        // Функция добавления машины
        document.getElementById('addCarFormSubmit').addEventListener('submit', async (e) => {
            e.preventDefault();

            const newCar = {
                make: document.getElementById('carMake').value,
                color: document.getElementById('carColor').value,
                year: parseInt(document.getElementById('carYear').value),
                license_plate: document.getElementById('carLicensePlate').value
            };

            try {
                const token = sessionStorage.getItem('userId');
                const response = await fetch(API_URL, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`
                    },
                    body: JSON.stringify(newCar)
                });

                if (response.ok) {
                    await loadCars();
                    document.getElementById('addCarFormSubmit').reset();
                    document.getElementById('addCarForm').style.display = 'none';
                } else {
                    alert('Failed to add car');
                }
            } catch (error) {
                console.error('Error adding car:', error);
            }
        });

        // Функция удаления машины
        async function deleteCar(carId) {
            try {
                const token = sessionStorage.getItem('userId');
                const response = await fetch(`${API_URL}/${carId}`, {
                    method: 'DELETE',
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                });

                if (response.ok) {
                    await loadCars();
                } else {
                    alert('Failed to delete car');
                }
            } catch (error) {
                console.error('Error deleting car:', error);
            }
        }

        // Функция выхода из аккаунта
        function logout() {
            sessionStorage.removeItem('userId'); // Удаляем токен из sessionStorage
            document.getElementById('loginForm').style.display = 'block';
            document.getElementById('mainContent').style.display = 'none';
        }

        // Проверяем авторизацию при загрузке страницы
        window.onload = () => {
            currentUserId = sessionStorage.getItem('userId');
            if (currentUserId) {
                document.getElementById('loginForm').style.display = 'none';
                document.getElementById('mainContent').style.display = 'block';
                loadCars();
            } else {
                document.getElementById('loginForm').style.display = 'block';
                document.getElementById('mainContent').style.display = 'none';
            }
        };
    </script>
</body>
</html>